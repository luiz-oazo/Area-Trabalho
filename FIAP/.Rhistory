# Operações matemáticas
soma <- x + y
# Atribuição de valores às variáveis
x <- 10
y <- 5
# Operações matemáticas soma <- x + y
subtracao <- x - y multiplicacao <- x * y divisao <- x / y
print(divisao)
# Atribuição de valores às variáveis x <- 10
# Atribuição de valores às variáveis
x <- 10
y <- 5
# Operações matemáticas
soma <- x + y
subtracao <- x - y
multiplicacao <- x * y
divisao <- x / y
# Impressão de resultados
print(soma)
print(subtracao)
print(multiplicacao)
print(divisao)
divisao
# Atribuição de valores às variáveis
x <- 10
y <- 5
# Operações matemáticas
soma <- x + y
subtracao <- x - y
multiplicacao <- x * y
divisao <- x / y
# Impressão de resultados
print(soma)
print(subtracao)
print(multiplicacao)
print(divisao)
soma
# Atribuição de valores às variáveis
x <- 10
y <- 5
# Operações matemáticas
soma <- x + y
subtracao <- x - y
multiplicacao <- x * y
divisao <- x / y
# Impressão de resultados
print(soma)
print(subtracao)
print(multiplicacao)
print(divisao)
soma
subtracao
multiplicacao
divisao
matriz1 <- matrix(c(1, 2, 3, 4), nrow = 2, ncol = 2)
matriz1
c <- matriz(1, 2, 3, 4)
c
c(1, 2, 3, 4)
xx <- c(1, 2, 3, 4)
xx
xx <- matriz(c(1, 2, 3, 4), 2, 2)
xx <- matrix(c(1, 2, 3, 4), 2, 2)
xx
xx <- matrix(c(1, 2, 3, 4), 2, 3)
xx <- matrix(c(1, 2, 3, 4, 5, 6), 2, 3)
xx
divisao
library(tibble)
install.packages("tibble")
library(tibble)
tib <- tibble(
nome = c("João", "Maria", "Pedro"),
idade = c(25, 30, 28),
casado = c(TRUE, FALSE, TRUE)
)
tib
matriz1 <- matrix(c(1, 2, 3, 4), nrow = 2, ncol = 2)
matriz1
xx <- matrix(c(1, 2, 3, 4, 5, 6), 2, 3)
xx
elemento_df <- df[1, 2]
elemento_df <- tib[1, 2]
elemento_df
df <- data.frame(
nome = c("João", "Maria", "Pedro"), idade = c(25, 30, 28),
casado = c(TRUE, FALSE, TRUE)
)
df
elemento_df <- df[1, 2]
elemento_tib <- tib[1, 2]
elemento_tib
elemento_df
setwd("Dropbox/Luiz Tavares/USP - Matérias Doutorado/EAD5754 - Vidal e Cesar/Cluster/")
setwd("/Dropbox/Luiz Tavares/USP - Matérias Doutorado/EAD5754 - Vidal e Cesar/Cluster/")
setwd("/Dropbox/Luiz Tavares/USP - Materias Doutorado/EAD5754 - Vidal e Cesar/Cluster/")
setwd("Dropbox/Luiz Tavares/USP - Materias Doutorado/EAD5754 - Vidal e Cesar/Cluster/")
setwd()
pwd()
!pwd
getwd()
setwd("../Dropbox/Luiz Tavares/USP - Materias Doutorado/EAD5754 - Vidal e Cesar/Cluster/")
setwd("../USP - Materias Doutorado/EAD5754 - Vidal e Cesar/Cluster/")
getwd()
setwd("../Luiz Tavares/USP - Materias Doutorado/EAD5754 - Vidal e Cesar/Cluster/")
list.files(path=".", pattern=NULL, all.files=FALSE,
full.names=FALSE)
list.files(path=".", pattern=NULL, all.files=FALSE, full.names=FALSE)
getwd()
setwd("../Library/CloudStorage/Dropbox/Luiz Tavares/USP - Materias Doutorado/EAD5754 - Vidal e Cesar/Cluster/")
getwd()
setwd("..")
getwd()
list.files(path=".", pattern=NULL, all.files=FALSE, full.names=FALSE)
setwd("Library")
getwd()
list.files(path=".", pattern=NULL, all.files=FALSE, full.names=FALSE)
setwd("CloudStorage")
getwd()
setwd("Dropbox")
getwd()
setwd(Luiz Tavares/USP - Materias Doutorado/EAD5754 - Vidal e Cesar/Cluster/")
setwd("Luiz Tavares/USP - Materias Doutorado/EAD5754 - Vidal e Cesar/Cluster/")
setwd("Luiz Tavares/USP - Matérias Doutorado/EAD5754 - Vidal e Cesar/Cluster/")
setwd("Luiz Tavares")
getwd()
list.files(path=".", pattern=NULL, all.files=FALSE, full.names=FALSE)
setwd("USP/USP - Matérias Doutorado/EAD5754 - Vidal e Cesar/Cluster/")
setwd("USP")
getwd()
list.files(path=".", pattern=NULL, all.files=FALSE, full.names=FALSE)
setwd("USP - Materias Doutorado/EAD5754 - Vidal e Cesar/Cluster/")
setwd("USP - Materias Doutorado")
setwd("USP - Matérias Doutorado")
setwd("USP - Materias Doutorado")
setwd("USP_Materias")
getwd()
setwd("USPx")
list.files(path=".", pattern=NULL, all.files=FALSE, full.names=FALSE)
setwd("USPx")
x
x <- 3
x
y <- 2
x/y
getwd()
setwd("Doutorado")
getwd()
setwd("USPx")
getwd()
setwd("EAD5754 - Vidal e Cesar/Cluster/")
getwd()
x <- 40
y <- 20
c(1, 2, 3, 4)
lista <- c(1, 2, 3, 4)
lista
lista[1]
lista[2]
lista <- c(10, 25, 33, 49)
lista[1]
lista[2]
matrix(c(11, 22, 35, 48), nrow = 2, ncol = 2)
mtx <- matrix(c(11, 22, 35, 48), nrow = 2, ncol = 2)
mtx
mtx[1,2]
matrix(c(11, 22, 35, 48, 45), nrow = 2, ncol = 2)
matrix(c(11, 22, 35, 48, 45, 66), nrow = 2, ncol = 2)
matrix(c(11, 22, 35, 48, 45, 66), 3, 2)
[(1, 2, 3), (2, 3, 4)]
matrix(c(11, 22, 35, 48, 45, 66, 3, 5, 6), 3, 3)
matrix(c(11, 22, 35, 48, 45, 66, 3, 5, 6), 3, 3)[2,2]
mtx <- matrix(c(11, 22, 35, 48, 45, 66, 3, 5, 6), 3, 3)
mtx
mtx[2,2]
xx <- matrix(c(1, 2, 3, 4, 5, 6), 2, 3)
xx
xx[1,1]
matrix(c(1, 2, 3, 4, 5, 6), 2, 3)[1,1]
xx <- matrix(c(1, 2, 3, 4, 5, 6), 2, 3)
dd = xx[1,1]
dd
xx <- matrix(c(1, 2, 3, 4, 5, 6), 2, 3)
dd = xx[1,1]
dd
zz <- dd + 1
zz
zz <- matrix(c(1, 2, 3, 4, 5, 6), 2, 3)[1,1] + 1
zz
# Atribuição de valores às variáveis
x <- 10
y <- 5
# Operações matemáticas
soma <- x + y
subtracao <- x - y
multiplicacao <- x * y
divisao <- x / y
# Impressão de resultados
print(soma)
print(subtracao)
print(multiplicacao)
print(divisao)
soma
subtracao
multiplicacao
divisao
df <- data.frame(
nome = c("João", "Maria", "Pedro"), idade = c(25, 30, 28),
casado = c(TRUE, FALSE, TRUE)
)
df
df[2]
df[2,]
df[2,1]
df[2,]
df[2]
df[,2]
tib <- tibble(
nome = c("João", "Maria", "Pedro"),
idade = c(25, 30, 28),
casado = c(TRUE, FALSE, TRUE)
)
tib
tib[1, 2]
tib[2, ]
tib[2]
tib[,2]
tib[2,2]
df[,2]
df
tib
df[1, 2]
tib[1, 2]
library(utf8)
as_utf8("João", normalize = FALSE)
utf8_valid("João")
exemplo1 <- read.csv2("exemplo1.csv", stringsAsFactors=FALSE)
exemplo1
library(car)
install.packages("car")
library(car)
library(car)
exemplo1
scatterplot(V2~V1+Idade, regLine=FALSE, smooth=FALSE, id=list(method="mahal", n=7, labels=exemplo1$Respondente), boxplots=FALSE, xlab="Lealdade à Loja", ylab="Lealdade à Marca", main="Análise de Clusters", cex=2.5, data=exemplo1)
dist(exemplo1[2:3], method="euclidean")
hc1 <- hclust(dist(exemplo1[2:3]) , method= "single")
plot(hc1, main= "Dendrograma para a solução hc1", xlab= "Número da observação em Exemplo1", sub="Method=single; Distance=euclidian")
par(mfrow = c(1,2))
dendro1 <- as.dendrogram(hc1)
plot(dendro1, main= "Cluster Dendrogram for Solution hc1", xlab= "Observation Number in Data Set exemplo1", sub="Method=single; Distance=euclidian")
rect.hclust(hc1, k=3)
as.factor(cutree(hc1, k=3))
summary(as.factor(cutree(hc1, k = 3))) # Cluster Sizes
by(exemplo1[,2:3], as.factor(cutree(hc1, k = 3)), colMeans) # Cluster Centroids
biplot(princomp(exemplo1[,2:3]), xlabs = as.character(cutree(hc1, k = 3)))
exemplo1$cluster1 <- as.factor(cutree(hc1, k = 3))
library(RcmdrMisc)
install.packages("RcmdrMisc")
library(RcmdrMisc)
numSummary(exemplo1[,c("V1", "V2", "Idade"), drop=FALSE], statistics=c("mean", "sd", "IQR", "quantiles"), quantiles=c(0,.25,.5,.75,1), groups=exemplo1$cluster1)
boxplot(Idade ~ cluster1, data=exemplo1)
summary(aov(Idade ~cluster1, data=exemplo1))
centroides1 <- aggregate(cbind(V1, V2) ~ cluster1, data=exemplo1, FUN=mean)
scatterplot(V2~V1 | cluster1, regLine=FALSE, smooth=FALSE, id=list(method='mahal', n=7), boxplots=FALSE, xlab="Lealdade à Loja", ylab="Lealdade à Marca", main="Análise de Clusters",   cex=2.5, by.groups=TRUE, data=exemplo1, col=c('black', 'red', 'blue'))
points(centroides1$V1, centroides1$V2, pch=20)
hc2 <- hclust(dist(exemplo1[,2:3]) , method= "complete")
plot(hc2, main= "Dendrograma para a solução hc2", xlab= "Número da observação em Exemplo1", sub="Method=complete; Distance=euclidian")
exemplo4 <-read.csv2("exemplo4.csv", stringsAsFactors = FALSE)
exemplo4 <- exemplo1
dist(exemplo4[2:8], method="euclidean")
exemplo4 <-read.csv2("exemplo4.csv", stringsAsFactors = FALSE)
exemplo4 <- exemplo1
dist(exemplo4[2:8], method="euclidean")
exemplo4 <-read.csv2("exemplo4.csv", stringsAsFactors = FALSE)
#exemplo4 <- exemplo1
dist(exemplo4[2:8], method="euclidean")
View(exemplo1)
View(df)
exemplo4 <-read.csv2("exemplo4.csv", stringsAsFactors = FALSE)
exemplo4
exemplo4[2:8]
exemplo4[2:6]
exemplo1
