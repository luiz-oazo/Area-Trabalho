{"metadata": {"kernelspec": {"name": "conda-env-anaconda-panel-2023.05-py310-py", "display_name": "anaconda-panel-2023.05-py310", "language": "python"}, "language_info": {"name": "python", "version": "3.11.5", "mimetype": "text/x-python", "codemirror_mode": {"name": "ipython", "version": 3}, "pygments_lexer": "ipython3", "nbconvert_exporter": "python", "file_extension": ".py"}}, "nbformat_minor": 5, "nbformat": 4, "cells": [{"id": "1e7f716a-161a-411f-b708-c188a611c196", "cell_type": "code", "source": "#Giulia Corr\u00eaa Camillo - RM554473", "metadata": {"trusted": true}, "outputs": [], "execution_count": null}, {"id": "453c9e1a-0c61-41b6-a514-f44ea88245ee", "cell_type": "code", "source": "import json\nimport os", "metadata": {"trusted": true}, "outputs": [], "execution_count": 17}, {"id": "d3816835-368d-481c-9729-a0e86782179c", "cell_type": "code", "source": "\nfilename = 'dados.json'\n\ndef criar_registro(nome, idade, email, telefone, endereco):\n   registros = ler_registros()\n   novo_registro = {\n       \"nome\": nome,\n       \"idade\": idade,\n       \"email\": email,\n       \"telefone\": telefone,\n       \"endereco\": endereco\n   }\n   registros.append(novo_registro)\n   salvar_registros(registros)\n   print(\"Registro criado com sucesso!\")\n\n\ndef ler_registros():\n   if not os.path.exists(filename):\n       return []\n   with open(filename, 'r') as file:\n       return json.load(file)\n\n\ndef atualizar_registro(indice, nome, idade, email, telefone, endereco):\n   registros = ler_registros()\n   if 0 <= indice < len(registros):\n       registros[indice] = {\n           \"nome\": nome,\n           \"idade\": idade,\n           \"email\": email,\n           \"telefone\": telefone,\n           \"endereco\": endereco\n       }\n       salvar_registros(registros)\n       print(\"Registro atualizado com sucesso!\")\n   else:\n       print(\"\u00cdndice inv\u00e1lido!\")\n\n\ndef deletar_registro(indice):\n   registros = ler_registros()\n   if 0 <= indice < len(registros):\n       registros.pop(indice)\n       salvar_registros(registros)\n       print(\"Registro deletado com sucesso!\")\n   else:\n       print(\"\u00cdndice inv\u00e1lido!\")\n\n\ndef salvar_registros(registros):\n   with open(filename, 'w') as file:\n       json.dump(registros, file, indent=4)", "metadata": {"trusted": true}, "outputs": [], "execution_count": 19}, {"id": "7b2b1cc5-be1f-47c2-8927-7a0fb7dc2896", "cell_type": "code", "source": "\ndef inicializar_registros():\n   if not os.path.exists(filename):\n       registros_iniciais = [\n           {\"nome\": \"Giulia\", \"idade\": 18, \"email\": \"giulia12camillo@example.com\", \"telefone\": \"123456789\", \"endereco\": \"Rua A, 123\"},\n           {\"nome\": \"Carol\", \"idade\": 18, \"email\": \"carolinedeoliveira@example.com\", \"telefone\": \"987654321\", \"endereco\": \"Rua B, 456\"},\n           {\"nome\": \"Maria\", \"idade\": 20, \"email\": \"maria19brito@example.com\", \"telefone\": \"012345678\", \"endereco\": \"Rua C, 789\"}\n       ]\n       salvar_registros(registros_iniciais)", "metadata": {"trusted": true}, "outputs": [], "execution_count": 21}, {"id": "18ea839c-9f6b-41f9-99df-233abd51de63", "cell_type": "code", "source": "def menu():\n   inicializar_registros()\n   while True:\n       print(\"\\nMenu:\")\n       print(\"1. Criar Registro\")\n       print(\"2. Ver Registros\")\n       print(\"3. Atualizar Registro\")\n       print(\"4. Deletar Registro\")\n       print(\"5. Sair\")\n       escolha = input(\"Escolha uma op\u00e7\u00e3o: \")\n       if escolha == '1':\n           nome = input(\"Nome: \")\n           idade = input(\"Idade: \")\n           email = input(\"Email: \")\n           telefone = input(\"Telefone: \")\n           endereco = input(\"Endere\u00e7o: \")\n           criar_registro(nome, idade, email, telefone, endereco)\n       elif escolha == '2':\n           registros = ler_registros()\n           for i, registro in enumerate(registros):\n               print(f\"{i}: {registro}\")\n       elif escolha == '3':\n           indice = int(input(\"N\u00famero do registro que deseja atualizar: \"))\n           nome = input(\"Novo Nome: \")\n           idade = input(\"Nova Idade: \")\n           email = input(\"Novo Email: \")\n           telefone = input(\"Novo Telefone: \")\n           endereco = input(\"Novo Endere\u00e7o: \")\n           atualizar_registro(indice, nome, idade, email, telefone, endereco)\n       elif escolha == '4':\n           indice = int(input(\"N\u00famero do registro que deseja deletar: \"))\n           deletar_registro(indice)\n       elif escolha == '5':\n           print(\"Saindo...\")\n           break\n       else:\n           print(\"Op\u00e7\u00e3o inv\u00e1lida!\")\n\nmenu()", "metadata": {"trusted": true}, "outputs": [{"name": "stdout", "text": "\nMenu:\n1. Criar Registro\n2. Ver Registros\n3. Atualizar Registro\n4. Deletar Registro\n5. Sair\n", "output_type": "stream"}], "execution_count": null}, {"id": "664efc01-6a1a-4640-822d-1a95f1601c08", "cell_type": "code", "source": "", "metadata": {"trusted": true}, "outputs": [], "execution_count": null}]}